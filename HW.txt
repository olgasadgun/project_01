# Задача 1.1.

# Есть строка с перечислением песен

my_favorite_songs = "Waste a Moment", "Staying\' Alive", "A Sorta Fairytale", "Start Me Up", "New Salvation"

# Выведите на консоль с помощью индексации строки, последовательно: первый трек, последний, второй, второй с конца
# Нельзя переопределять my_favorite_songs и запятая не должна выводиться.

# type(my_favorite_songs)

# Используем split(), чтобы разбить строку на список песен
# songs_list = my_favorite_songs.split(", ")

# Выводим требуемые треки по индексам
# print(songs_list[0])
# print(songs_list[-1])
# print(songs_list[1])
# print(songs_list[-2])

print(my_favorite_songs[0])
print(my_favorite_songs[4])
print(my_favorite_songs[1])
print(my_favorite_songs[-2])

# Задача 1.2.

# Пункт A. 
# Приведем плейлист песен в виде списка списков
# Список my_favorite_songs содержит список названий и длительности каждого трека
# Выведите общее время звучания трех случайных песен в формате
# Три песни звучат ХХХ минут

my_favorite_songs = [
    ['Waste a Moment', 3.03],
    ['New Salvation', 4.02],
    ['Staying\' Alive', 3.40],
    ['Out of Touch', 3.03],
    ['A Sorta Fairytale', 5.28],
    ['Easy', 4.15],
    ['Beautiful Day', 4.04],
    ['Nowhere to Run', 2.58],
    ['In This World', 4.02],
]

# Выберем три случайные песни из плейлиста
import random
random_songs = random.sample(my_favorite_songs, 3)

# Вычислим общее время звучания выбранных песен
total_time = sum([song[1] for song in random_songs])

# Выведем результат в заданном формате
print(f"Три песни звучат {int(total_time)} минут")


# Пункт B. 
# Есть словарь песен 
# Распечатайте общее время звучания трех случайных песен
# Вывод: Три песни звучат ХХХ минут.

my_favorite_songs_dict = {
    'Waste a Moment': 3.03,
    'New Salvation': 4.02,
    'Staying\' Alive': 3.40,
    'Out of Touch': 3.03,
    'A Sorta Fairytale': 5.28,
    'Easy': 4.15,
    'Beautiful Day': 4.04,
    'Nowhere to Run': 2.58,
    'In This World': 4.02,
}

# Выберем три случайные песни из словаря
random_songs = random.sample(list(my_favorite_songs_dict.keys()), 3)

# Вычислим общее время звучания выбранных песен
total_time = sum([my_favorite_songs_dict[song] for song in random_songs])

# Выведем результат в заданном формате
print(f"Три песни звучат {int(total_time)} минут")

# Дополнительно для пунктов A и B
# Пункт C.
# Сгенерируйте случайные песни с помощью модуля random
# import random

# Дополнительно 
# Пункт D.
# Переведите минуты и секунды в формат времени. Используйте модуль datetime

# Задача 1.3.

# Напишите скрипт, который принимает от пользователя номер месяца, 
# а возвращает количество дней в нем.
# Результат проверки вывести на консоль
# Допущение: в феврале 28 дней
# Если номер месяца некорректен - сообщить об этом

# Запросим у пользователя номер месяца
month_number = input("Введите номер месяца: ")

# Список названий месяцев
months = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
          'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']

# Проверим, что номер введен корректно (в диапазоне от 1 до 12)
if month_number.isdigit() and int(month_number) in range(1, 13):
    # Преобразуем номер месяца в целое число
    month_number = int(month_number)

    # Список с количеством дней в каждом месяце
    days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

    # Вычисляем количество дней в месяце
    days_count = days_in_month[month_number - 1]

    # Выводим результат на экран
    print(f"Вы ввели {months[month_number-1]}. {days_count} дней")

# Если номер месяца введен некорректно - сообщаем об ошибке
else:
    print("Такого месяца нет!")

# Например,
#     Введите номер месяца: 3
#     Вы ввели март. 31 дней

#     Введите номер месяца: 2
#     Вы ввели февраль. 28 дней

#     Введите номер месяца: 15
#     Такого месяца нет!


# Задача 1.4.

# Есть словарь кодов товаров titles

titles = {
    'Кроссовки тип 3 (Adidas)': '100000110',
    'Мячик тип 2 (Adidas)': '100000146',
    'Кепка тип 1 (Adidas)': '100000149',
    'Ремень тип 2 (Nike)': '100000194',
    'Футболка тип 1 (Adidas)': '100000224',
    'Шапка тип 5 (Puma)': '100000280',
}

# Товары находятся на складе и сохранены в виде словаря списков словарей,
# которые отражают количество товаров в магазине по каждому коду.

store = {
    '100000110': [{'quantity': 31, 'price': 1637}],
    '100000146': [ {'quantity': 4, 'price': 45}, {'quantity': 10, 'price': 48}],
    '100000149': [ {'quantity': 28, 'price': 279}, {'quantity': 32, 'price': 291}],
    '100000194': [{'quantity': 8, 'price': 220}, {'quantity': 1, 'price': 170}],
    '100000224': [{'quantity': 61, 'price': 438}, {'quantity': 23, 'price': 302},  {'quantity': 50, 'price': 412}],
    '100000280': [{'quantity': 26, 'price': 175}, ]
}

# Рассчитайте на какую сумму лежит каждого товара на складе.
#
# Вывести суммарную стоимость каждого товара в магазине в формате:
# "<товар> - <кол-во> шт, стоимость <общая стоимость> руб"

# Пример: "Кроссовки тип 3 (Adidas) - 31 шт, стоимость 50747 руб"

# Создадим словарь, где для каждого товара посчитаем количество и стоимость
total = {}
for title, code in titles.items():
    total[title] = {'quantity': 0, 'price': 0}
    for item in store[code]:
        total[title]['quantity'] += item['quantity']
        total[title]['price'] += item['quantity'] * item['price']

# Выведем результат на экран
for title, values in total.items():
    print(f"{title} - {values['quantity']} шт, стоимость {values['price']} руб")